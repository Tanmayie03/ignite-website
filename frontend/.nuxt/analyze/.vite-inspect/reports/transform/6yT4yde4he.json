{
  "resolvedId": "D:/Ignite-self/frontend/node_modules/@cashfreepayments/cashfree-js/dist/script.esm.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var V3_URL = \"https://sdk.cashfree.com/js/v3/cashfree.js\";\nvar V3_URL_REGEX = /^https:\\/\\/sdk\\.cashfree\\.com\\/js\\/v3\\/?(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = \"load was called but an existing Cashfree.js script already exists in the document; existing script parameters will be used\";\nvar findScript = function findScript() {\n    var scripts = document.querySelectorAll('script[src^=\"'.concat(V3_URL, '\"]'));\n\n    for (var i = 0; i < scripts.length; i++) {\n        var script = scripts[i];\n\n        if (!V3_URL_REGEX.test(script.src)) {\n            continue;\n        }\n\n        return script;\n    }\n\n    return null;\n};\n\nvar injectScript = function injectScript(params) {\n    var queryString = \"\";\n    var script = document.createElement(\"script\");\n    script.src = \"\".concat(V3_URL).concat(queryString);\n    var headOrBody = document.head || document.body;\n\n    if (!headOrBody) {\n        throw new Error(\"Expected document.body not to be null. Cashfree.js requires a <body> element.\");\n    }\n\n    headOrBody.appendChild(script);\n    return script;\n};\n\nvar cashfreePromise = null;\nvar loadScript = function loadScript(params) {\n    // Ensure that we only attempt to load Cashfree.js at most once\n    if (cashfreePromise !== null) {\n        return cashfreePromise;\n    }\n\n    cashfreePromise = new Promise(function (resolve, reject) {\n        if (typeof window === \"undefined\" || typeof document === \"undefined\") {\n            // Resolve to null when imported server side. This makes the module\n            // safe to import in an isomorphic code base.\n            resolve(null);\n            return;\n        }\n\n        if (window.Cashfree && params) {\n            console.warn(EXISTING_SCRIPT_MESSAGE);\n        }\n\n        if (window.Cashfree) {\n            resolve(window.Cashfree);\n            return;\n        }\n\n        try {\n            var script = findScript();\n\n            if (script && params) {\n                console.warn(EXISTING_SCRIPT_MESSAGE);\n            } else if (!script) {\n                script = injectScript(params);\n            }\n\n            script.addEventListener(\"load\", function () {\n                if (window.Cashfree) {\n                    resolve(window.Cashfree);\n                } else {\n                    reject(new Error(\"Cashfree.js not available\"));\n                }\n            });\n            script.addEventListener(\"error\", function () {\n                reject(new Error(\"Failed to load Cashfree.js\"));\n            });\n        } catch (error) {\n            reject(error);\n            return;\n        }\n    });\n    return cashfreePromise;\n};\nvar initCashfree = function initCashfree(maybeCashfree, args, startTime) {\n    if (maybeCashfree === null) {\n        return null;\n    }\n\n    var cashfree = maybeCashfree.apply(undefined, args);\n    return cashfree;\n};\n\nvar cashfreePromise$1 = Promise.resolve().then(function () {\n    return loadScript(null);\n});\nvar loadCalled = false;\ncashfreePromise$1[\"catch\"](function (err) {\n    if (!loadCalled) {\n        console.warn(err);\n    }\n});\nvar load = async function load() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n    }\n\n    loadCalled = true;\n    var startTime = Date.now();\n    const maybeCashfree = await cashfreePromise$1;\n    return initCashfree(maybeCashfree, args, startTime);\n};\n\nexport { load };\n",
      "start": 1745870470744,
      "end": 1745870471280,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1745870471280,
      "end": 1745870471280,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1745870471280,
      "end": 1745870471281,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1745870471281,
      "end": 1745870471281,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1745870471281,
      "end": 1745870471281,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1745870471281,
      "end": 1745870471281,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1745870471281,
      "end": 1745870471281,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1745870471281,
      "end": 1745870471281,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1745870471281,
      "end": 1745870471281,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1745870471281,
      "end": 1745870471281,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1745870471281,
      "end": 1745870471281,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1745870471281,
      "end": 1745870471281,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1745870471281,
      "end": 1745870471281,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1745870471281,
      "end": 1745870471281,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1745870471281,
      "end": 1745870471281,
      "order": "normal"
    }
  ]
}
